# .cursorrules — Guardrails for Multi-file and Large Changes

# Purpose:
# Enforce disciplined, end-to-end changes when AI edits multiple files or large diffs.
# Maintain code quality, prevent placeholders, and ensure CI passes.

- For any change touching >3 files or >200 lines:
  1) **PLAN** — List all files, dependencies, Definition of Done (DoD), and delivery strategy (stacked vs atomic PR).
  2) **MECHANICAL fixes first** — ruff --fix, exception types, f-string migration.
  3) **TYPING second** — add type hints, narrow exceptions, pass mypy.
  4) **LOGIC last** — bug fixes or perf improvements with new tests.
  5) Output **unified DIFFS** per file with a traceability table mapping requirements to changes.
  6) Run **self-checks** and paste results (pre-commit, tests, mypy, ruff).
  7) **No placeholders** — No TODO/FIXME/pass/NotImplementedError in maintained code.
  8) If blocked or would exceed constraints, **STOP** and propose staged plan before proceeding.

# Repo layout expectations:
- Python libs: `python/<project>/`
- Python tests: `python/<project>/tests/`
- MATLAB libs: `matlab/<project>/`
- MATLAB tests: `matlab/tests/`
- Scripts/CLI entry points: `/scripts`
- Large data/binaries: Git LFS

# Commands AI should run (and paste output):
```bash
ruff check <touched_dir> --fix
mypy <touched_dir> || true
pre-commit run --all-files
pytest -q || echo "No tests found"
```
